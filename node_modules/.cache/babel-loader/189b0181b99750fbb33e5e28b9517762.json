{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\n\nconst useDropdown = () => {\n  _s();\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const dropRef = useRef();\n  useEffect(() => {\n    if (dropRef && dropRef.current) {\n      // ensure that relative class is added to the wrapper\n      dropRef.current.classList.add(\"relative\");\n    }\n  }, []);\n  useEffect(() => {\n    const dropdownListener = e => {\n      if (!dropRef.current || dropRef.current.contains(e.target)) {\n        return;\n      } else {\n        setShowDropdown(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", dropdownListener);\n    return () => document.removeEventListener(\"mousedown\", dropdownListener);\n  }, [dropRef]);\n  return [showDropdown, setShowDropdown, dropRef];\n};\n\n_s(useDropdown, \"58GgeEN+702w8Z8WAZLgtYJutEU=\");\n\nexport default useDropdown;","map":{"version":3,"sources":["O:/.Hooks/gen-app/src/components/Dropdown/useDropdown.js"],"names":["useState","useRef","useEffect","useDropdown","showDropdown","setShowDropdown","dropRef","current","classList","add","dropdownListener","e","contains","target","document","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMM,OAAO,GAAGL,MAAM,EAAtB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,OAAO,IAAIA,OAAO,CAACC,OAAvB,EAAgC;AAC9B;AACAD,MAAAA,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAA0BC,GAA1B,CAA8B,UAA9B;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAI,CAACL,OAAO,CAACC,OAAT,IAAoBD,OAAO,CAACC,OAAR,CAAgBK,QAAhB,CAAyBD,CAAC,CAACE,MAA3B,CAAxB,EAA4D;AAC1D;AACD,OAFD,MAEO;AACLR,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,KAND;;AAOAS,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCL,gBAAvC;AACA,WAAO,MAAMI,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CN,gBAA1C,CAAb;AACD,GAVQ,EAUN,CAACJ,OAAD,CAVM,CAAT;AAYA,SAAO,CAACF,YAAD,EAAeC,eAAf,EAAgCC,OAAhC,CAAP;AACD,CAtBD;;GAAMH,W;;AAwBN,eAAeA,WAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\"\r\n\r\nconst useDropdown = () => {\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n  const dropRef = useRef()\r\n  useEffect(() => {\r\n    if (dropRef && dropRef.current) {\r\n      // ensure that relative class is added to the wrapper\r\n      dropRef.current.classList.add(\"relative\")\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    const dropdownListener = (e) => {\r\n      if (!dropRef.current || dropRef.current.contains(e.target)) {\r\n        return\r\n      } else {\r\n        setShowDropdown(false)\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", dropdownListener)\r\n    return () => document.removeEventListener(\"mousedown\", dropdownListener)\r\n  }, [dropRef])\r\n\r\n  return [showDropdown, setShowDropdown, dropRef]\r\n}\r\n\r\nexport default useDropdown\r\n"]},"metadata":{},"sourceType":"module"}